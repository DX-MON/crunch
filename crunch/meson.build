libCrunchSrc = [
	'ArgsParser.c', 'StringFuncs.c', 'Logger.c', 'Core.c'
]
crunchSrc = ['crunch.c']
crunchSrcDir = meson.current_source_dir()
crunchInc = include_directories('.')

threadArgs = []
if c11Threading
	threadArgs += ['-DUSE_C11_THREADING']
else
	libCrunchSrc += ['threading/threadShim.c']
endif

config = configuration_data()
config.set('AUTOGEN_HEADER', '/* THIS FILE IS AUTOGENERATED, DO NOT EDIT */')
config.set('VERSION', '@VERSION@')
config.set('COMPILER', cc.get_id())
config.set('COMPILER_VERSION', cc.version())
config.set('TARGET_SYS', target_machine.system())
config.set('TARGET_ARCH', target_machine.cpu())

versionHeaderSrc = configure_file(
	configuration: config,
	input: 'version.h.in',
	output: 'version.h.in'
)

versionHeader = vcs_tag(
	input: versionHeaderSrc,
	output: 'version.h',
	replace_string: '@VERSION@',
	fallback: 'v@0@'.format(meson.project_version())
)

libCrunch = shared_library(
	'libcrunch',
	libCrunchSrc,
	name_prefix: '',
	c_args: libArgs + threadArgs,
	dependencies: [threading, libm],
	version: meson.project_version(),
	install: true
)

crunch = executable(
	'crunch',
	crunchSrc + [versionHeader],
	link_with: [libCrunch],
	dependencies: [threading, dl],
	install: true,
	install_rpath: libdir
)

pkgconfig.generate(
	libCrunch,
	name: 'crunch',
	filebase: 'crunch',
	version: meson.project_version(),
	description: 'crunch is a unit testing framework for C'
)

install_headers('crunch.h')
